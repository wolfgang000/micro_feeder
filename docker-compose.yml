version: "3.8"
services:
  backend:
    build:
      context: backend
      dockerfile: Dockerfile.dev
    volumes:
      - ././backend:/home/user/app/
    ports:
      - 8001:8001
    environment:
      DATABASE_URL: postgres://test_user:test_password@db_dev:5432/postgres_dev
      TEST_DATABASE_URL: postgres://test_user:test_password@db_dev:5432/postgres_test
      DB_POOL_SIZE: 10
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/api/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s

  db_dev:
    image: "postgres:10.15-alpine"
    environment:
      POSTGRES_USER: test_user
      POSTGRES_PASSWORD: test_password
      POSTGRES_DB: postgres_dev
    volumes:
      - pgdata_dev:/var/lib/postgresql/data:rw
    ports:
      - 8004:5432
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "test_user", "-d", "postgres_dev"]
      interval: 30s
      timeout: 3s
      retries: 30
      start_period: 15s

  frontend:
    build:
      context: frontend
      dockerfile: Dockerfile.dev
    working_dir: /home/node/app
    volumes:
      - ./frontend/tsconfig.json:/home/node/app/tsconfig.json
      - ./frontend/src:/home/node/app/src
      - ./frontend/public:/home/node/app/public
      - ./frontend/package.json:/home/node/app/package.json
      - ./frontend/package-lock.json:/home/node/app/package-lock.json
      - node_modules_cache_frontend:/home/node/app/node_modules
    environment:
      PORT: 8000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 15s
    command: /bin/sh -c "npm install && npm start"
    ports:
      - 8000:8000

volumes:
  pgdata_dev:
  node_modules_cache_frontend:
